# Introduction
This Python script is designed to fetch job data from the Active Jobs API and save the data in both JSON and CSV formats. The API allows you to search for jobs based on specific titles and locations. The script demonstrates how to handle API requests, parse the response, and store the data effectively in a structured format.

# API URL and Parameters
The **bold API URL** used to fetch the data is:
[Active Jobs API](https://active-jobs-db.p.rapidapi.com/active-ats)

The **bold querystring** parameters are as follows:
<!-- python code block -->
python
{
    "title": "\"Data Engineer\"",
    "location": "\"United States\""
}

These parameters define the **boldjob title** and **boldlocation** we are searching for.

# API Headers
<!-- python code block -->
python headers = {
    "x-rapidapi-key": "your_api_key_here",
    "x-rapidapi-host": "active-jobs-db.p.rapidapi.com"
}
**bold Important:** Make sure to replace `"your_api_key_here"` with your actual **bold API key**.

# Making the API Request
The following code sends a **bold GET request** to the API with the defined **bold URL, headers,** and **bold query parameters:**
<!-- python code block -->
python response = requests.get(url, headers=headers, params=querystring)

This request is processed and returns a response containing job data.

# Handling the Response
After making the request, the response status is checked to ensure the request was successful:
<!-- python code block -->
python if response.status_code == 200:
    job_data = response.json()
If the response is successful (status code **200**), the data is converted into a **bold JSON object**.

# Saving Data to JSON
<!-- Bold -->
**bold**
Once the data is retrieved, it is saved into a **JSON file** for further analysis:
